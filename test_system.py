#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ø–æ—Ç–æ–∫–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤
"""

import asyncio
import httpx
import json

async def test_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoints"""
    base_url = "http://localhost:8000"
    
    async with httpx.AsyncClient() as client:
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...")
        
        # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–Ω–∏–≥ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (ID: 999999999)")
        try:
            response = await client.get(f"{base_url}/api/books?user_id=999999999")
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω —Å–ø–∏—Å–æ–∫ –∫–Ω–∏–≥: {len(data['books'])} –∫–Ω–∏–≥")
                print(f"   –î–∞–Ω–Ω—ã–µ: {data}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        
        # –¢–µ—Å—Ç 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
        print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞")
        try:
            test_file_info = {
                "file_id": "test_file_id_123",
                "file_name": "test_book.pdf",
                "file_size": 1024000,
                "mime_type": "application/pdf"
            }
            
            response = await client.post(
                f"{base_url}/api/add-file",
                json={
                    "user_id": 999999999,
                    "file_info": test_file_info
                }
            )
            
            if response.status_code == 200:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ
        print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ")
        try:
            response = await client.get(f"{base_url}/api/books?user_id=999999999")
            if response.status_code == 200:
                data = response.json()
                books = data['books']
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–Ω–∏–≥: {len(books)}")
                for book in books:
                    print(f"   - {book['name']} (ID: {book['file_id']})")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        print("\n4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É")
        try:
            response = await client.get(f"{base_url}/simple?user_id=999999999")
            if response.status_code == 200:
                print("‚úÖ –ü—Ä–æ—Å—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–Ω–∏–≥–∞—Ö
                html_content = response.text
                if "test_book.pdf" in html_content:
                    print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
                else:
                    print("‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ø–æ—Ç–æ–∫–æ–≤–æ–π –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–æ–≤")
    print("=" * 60)
    asyncio.run(test_api())
    print("=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
